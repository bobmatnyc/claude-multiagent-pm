name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of production'
        required: false
        default: true
        type: boolean
      version_override:
        description: 'Override version (leave empty to use pyproject.toml version)'
        required: false
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for setuptools-scm
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools wheel setuptools-scm
    
    - name: Verify package metadata
      run: |
        echo "üìã Package Information:"
        python -c "import toml; p=toml.load('pyproject.toml'); print(f\"Package: {p['project']['name']}\"); print(f\"Version: {p['project']['version']}\")"
    
    - name: Build package
      run: |
        echo "üî® Building package..."
        python -m build
        echo "üì¶ Built distributions:"
        ls -la dist/
    
    - name: Check package with twine
      run: |
        echo "üîç Checking package integrity..."
        twine check dist/*
    
    - name: Publish to Test PyPI
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        echo "üì§ Publishing to Test PyPI..."
        twine upload --repository testpypi dist/* --skip-existing
        VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        echo "‚úÖ Published to Test PyPI"
        echo "üîó View at: https://test.pypi.org/project/claude-multiagent-pm/$VERSION/"
        echo "üì• Install with: pip install -i https://test.pypi.org/simple/ claude-multiagent-pm==$VERSION"
    
    - name: Publish to PyPI
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'false')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "üì§ Publishing to PyPI..."
        twine upload dist/* --skip-existing
        VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        echo "‚úÖ Published to PyPI"
        echo "üîó View at: https://pypi.org/project/claude-multiagent-pm/$VERSION/"
        echo "üì• Install with: pip install claude-multiagent-pm==$VERSION"
    
    - name: Create GitHub Release Assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}