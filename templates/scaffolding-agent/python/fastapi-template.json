{
  "name": "FastAPI Python Project",
  "description": "Modern FastAPI application with Poetry, Pytest, Ruff, Black, and MyPy",
  "type": "python-api",
  "framework": "fastapi",
  "language": "python",
  "version": "1.0.0",
  "tech_stack": {
    "backend": {
      "framework": "fastapi",
      "version": "^0.104.0",
      "features": ["async", "pydantic", "openapi"]
    },
    "dependency_management": {
      "tool": "poetry",
      "python_version": "^3.11"
    },
    "development": {
      "linting": "ruff",
      "formatting": "black",
      "type_checking": "mypy",
      "testing": "pytest"
    },
    "database": {
      "orm": "sqlalchemy",
      "migrations": "alembic",
      "async_driver": "asyncpg"
    },
    "deployment": {
      "server": "uvicorn",
      "containerization": "docker",
      "process_manager": "gunicorn"
    }
  },
  "project_structure": {
    "root": [
      "pyproject.toml",
      "README.md",
      ".env.example",
      ".gitignore",
      "Dockerfile",
      "docker-compose.yml",
      "Makefile"
    ],
    "src": {
      "app": [
        "__init__.py",
        "main.py",
        "config.py",
        "dependencies.py"
      ],
      "api": [
        "__init__.py",
        "routes/",
        "middleware/",
        "exceptions.py"
      ],
      "core": [
        "__init__.py",
        "models/",
        "schemas/",
        "services/",
        "repositories/"
      ],
      "db": [
        "__init__.py",
        "database.py",
        "session.py"
      ],
      "utils": [
        "__init__.py",
        "helpers.py",
        "validators.py"
      ]
    },
    "tests": [
      "__init__.py",
      "conftest.py",
      "test_main.py",
      "api/",
      "core/",
      "utils/"
    ],
    "migrations": [
      "alembic.ini",
      "env.py",
      "versions/"
    ],
    "scripts": [
      "run.py",
      "migrate.py",
      "seed.py"
    ]
  },
  "dependencies": {
    "production": {
      "fastapi": "^0.104.0",
      "uvicorn": "^0.24.0",
      "gunicorn": "^21.0.0",
      "pydantic": "^2.0.0",
      "pydantic-settings": "^2.0.0",
      "sqlalchemy": "^2.0.0",
      "alembic": "^1.12.0",
      "asyncpg": "^0.29.0",
      "python-multipart": "^0.0.6",
      "python-jose": "^3.3.0",
      "passlib": "^1.7.4",
      "python-dotenv": "^1.0.0"
    },
    "development": {
      "pytest": "^7.4.0",
      "pytest-asyncio": "^0.21.0",
      "pytest-cov": "^4.1.0",
      "httpx": "^0.25.0",
      "ruff": "^0.1.0",
      "black": "^23.0.0",
      "mypy": "^1.6.0",
      "pre-commit": "^3.5.0"
    }
  },
  "scripts": {
    "dev": "uvicorn app.main:app --reload --host 0.0.0.0 --port 8000",
    "start": "gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker",
    "test": "pytest",
    "test:coverage": "pytest --cov=app --cov-report=html",
    "lint": "ruff check .",
    "lint:fix": "ruff check --fix .",
    "format": "black .",
    "format:check": "black --check .",
    "typecheck": "mypy app/",
    "migrate": "alembic upgrade head",
    "migrate:generate": "alembic revision --autogenerate",
    "seed": "python scripts/seed.py"
  },
  "configuration_files": {
    "pyproject.toml": {
      "template": "fastapi-pyproject.toml",
      "customizations": ["name", "description", "author"]
    },
    "ruff.toml": {
      "template": "ruff-config.toml",
      "rules": ["recommended", "fastapi"]
    },
    "mypy.ini": {
      "template": "mypy-config.ini",
      "strict": true,
      "plugins": ["sqlalchemy", "pydantic"]
    },
    "pytest.ini": {
      "template": "pytest-config.ini",
      "asyncio_mode": "auto"
    },
    "Dockerfile": {
      "template": "python-dockerfile",
      "base_image": "python:3.11-slim"
    },
    "docker-compose.yml": {
      "template": "fastapi-compose.yml",
      "services": ["app", "db", "redis"]
    }
  },
  "scaffolding_steps": [
    {
      "step": "create_project_structure",
      "description": "Create directory structure and basic files"
    },
    {
      "step": "initialize_poetry",
      "description": "Initialize Poetry and install dependencies"
    },
    {
      "step": "setup_configuration",
      "description": "Configure Ruff, Black, MyPy, and Pytest"
    },
    {
      "step": "create_fastapi_app",
      "description": "Create basic FastAPI application structure"
    },
    {
      "step": "setup_database",
      "description": "Configure SQLAlchemy and Alembic"
    },
    {
      "step": "create_basic_routes",
      "description": "Generate basic API routes and models"
    },
    {
      "step": "setup_testing",
      "description": "Configure Pytest and create test structure"
    },
    {
      "step": "setup_docker",
      "description": "Create Docker configuration"
    },
    {
      "step": "validate_setup",
      "description": "Run linting, type checking, and tests"
    }
  ],
  "validation_checks": [
    "poetry_check",
    "ruff_linting",
    "black_formatting",
    "mypy_type_checking",
    "pytest_execution",
    "docker_build"
  ]
}