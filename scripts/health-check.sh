#!/bin/bash
# Claude PM Framework - Health Check
# Generated by deployment script v4.5.1

echo "🔍 Claude PM Framework Health Check"
echo "======================================"

cd "/Users/masa/Projects/claude-multiagent-pm"

# Check framework core
if [ -d "claude_pm" ]; then
    echo "✓ Framework core present"
else
    echo "❌ Framework core missing"
    exit 1
fi

# Check CLI wrappers
if [ -x "bin/aitrackdown" ]; then
    echo "✓ aitrackdown CLI available"
else
    echo "❌ aitrackdown CLI missing"
    exit 1
fi

# Check configuration
if [ -f ".claude-pm/config.json" ]; then
    echo "✓ Deployment configuration present"
else
    echo "❌ Deployment configuration missing"
    exit 1
fi

# Test AI-trackdown functionality
if ./bin/aitrackdown status >/dev/null 2>&1; then
    echo "✓ AI-trackdown integration working"
else
    echo "⚠ AI-trackdown integration issue"
fi

# Check memory optimization system
if [ -f "scripts/memory-monitor.js" ] && [ -f "scripts/memory-guard.js" ]; then
    echo "✓ Memory optimization system present"
    
    # Test memory monitoring
    if NODE_OPTIONS='--max-old-space-size=8192 --expose-gc' node scripts/memory-monitor.js --version >/dev/null 2>&1; then
        echo "✓ Memory monitor functional"
    else
        echo "⚠ Memory monitor issue"
    fi
    
    # Check memory guard
    if NODE_OPTIONS='--max-old-space-size=8192 --expose-gc' node scripts/memory-guard.js status >/dev/null 2>&1; then
        echo "✓ Memory guard system functional"
    else
        echo "⚠ Memory guard system issue"
    fi
else
    echo "❌ Memory optimization system missing"
fi

# Check Node.js memory configuration
if echo $NODE_OPTIONS | grep -q "max-old-space-size=8192"; then
    echo "✓ Node.js 8GB memory limit configured"
else
    echo "⚠ Node.js memory limit not optimally configured"
    echo "   Recommended: export NODE_OPTIONS='--max-old-space-size=8192 --gc-interval=100 --expose-gc'"
fi

# Check Python environment
if python3 --version >/dev/null 2>&1; then
    echo "✓ Python environment ready"
else
    echo "❌ Python environment issue"
    exit 1
fi

# Memory usage summary
echo ""
echo "Memory Usage Summary:"
echo "----------------------"
if command -v node >/dev/null 2>&1; then
    MEMORY_USAGE=$(node -e "const usage = process.memoryUsage(); console.log(\`Heap: \${Math.round(usage.heapUsed/1024/1024)}MB / \${Math.round(usage.heapTotal/1024/1024)}MB\`);")
    echo "Current: $MEMORY_USAGE"
fi
echo "Max Heap Configured: 8GB"
echo "Subprocess Limit: 2GB each"
echo "Max Concurrent Subprocesses: 4"

echo "======================================"
echo "🎉 Health check completed successfully"
echo "🧠 Memory optimization system ready"
