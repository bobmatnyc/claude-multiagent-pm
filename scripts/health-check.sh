#!/bin/bash
# Claude PM Framework - Health Check
# Generated by deployment script v4.0.0

echo "🔍 Claude PM Framework Health Check"
echo "Enhanced with AI-trackdown-tools validation"
echo "=========================================="

cd "/Users/masa/Projects/claude-multiagent-pm"

# Check framework core
if [ -d "claude_pm" ]; then
    echo "✓ Framework core present"
else
    echo "❌ Framework core missing"
    exit 1
fi

# Check CLI wrappers
if [ -x "bin/aitrackdown" ]; then
    echo "✓ aitrackdown CLI available"
else
    echo "❌ aitrackdown CLI missing"
    exit 1
fi

# Check configuration
if [ -f ".claude-pm/config.json" ]; then
    echo "✓ Deployment configuration present"
else
    echo "❌ Deployment configuration missing"
    exit 1
fi

# Test AI-trackdown functionality
echo "Validating AI-trackdown-tools integration..."

# Test basic CLI
if ./aitrackdown --version >/dev/null 2>&1; then
    echo "✓ AI-trackdown CLI executable"
else
    echo "❌ AI-trackdown CLI version check failed"
    exit 1
fi

# Test status command
if ./aitrackdown status >/dev/null 2>&1; then
    echo "✓ AI-trackdown status command working"
else
    echo "⚠ AI-trackdown status command issue"
fi

# Test backlog command
if ./aitrackdown backlog >/dev/null 2>&1; then
    echo "✓ AI-trackdown backlog command working"
else
    echo "⚠ AI-trackdown backlog command issue"
fi

# Test epic list command
if ./aitrackdown epic list >/dev/null 2>&1; then
    echo "✓ AI-trackdown epic management working"
else
    echo "⚠ AI-trackdown epic management issue"
fi

# Test issue list command
if ./aitrackdown issue list >/dev/null 2>&1; then
    echo "✓ AI-trackdown issue management working"
else
    echo "⚠ AI-trackdown issue management issue"
fi

# Test task list command
if ./aitrackdown task list >/dev/null 2>&1; then
    echo "✓ AI-trackdown task management working"
else
    echo "⚠ AI-trackdown task management issue"
fi

# Check task structure
if [ -d "tasks" ]; then
    echo "✓ AI-trackdown task structure present"
    
    # Count items in each category
    EPIC_COUNT=$(find tasks/epics -name "*.md" 2>/dev/null | wc -l)
    ISSUE_COUNT=$(find tasks/issues -name "*.md" 2>/dev/null | wc -l)
    TASK_COUNT=$(find tasks/tasks -name "*.md" 2>/dev/null | wc -l)
    
    echo "  - Epics: $EPIC_COUNT"
    echo "  - Issues: $ISSUE_COUNT"
    echo "  - Tasks: $TASK_COUNT"
    
    TOTAL_ITEMS=$((EPIC_COUNT + ISSUE_COUNT + TASK_COUNT))
    if [ $TOTAL_ITEMS -gt 0 ]; then
        echo "✓ AI-trackdown has $TOTAL_ITEMS tracked items"
    else
        echo "⚠ AI-trackdown has no tracked items"
    fi
else
    echo "❌ AI-trackdown task structure missing"
    exit 1
fi

# Check Python environment
if python3 --version >/dev/null 2>&1; then
    echo "✓ Python environment ready"
else
    echo "❌ Python environment issue"
    exit 1
fi

# Test the comprehensive health system
echo "Testing comprehensive health system..."

if python3 -c "import claude_pm.cli; print('✓ Claude PM CLI module accessible')" 2>/dev/null; then
    echo "✓ Claude PM CLI module accessible"
else
    echo "⚠ Claude PM CLI module issue"
fi

# Test the health command
if python3 -m claude_pm.cli health --help >/dev/null 2>&1; then
    echo "✓ Health command available"
else
    echo "⚠ Health command issue"
fi

# Test AI-trackdown health monitor
if python3 "$SCRIPT_DIR/ai_trackdown_health_monitor.py" --help >/dev/null 2>&1; then
    echo "✓ AI-trackdown health monitor available"
else
    echo "⚠ AI-trackdown health monitor issue"
fi

echo "======================================"
echo "🎉 Health check completed successfully"
echo "📊 Run 'python3 -m claude_pm.cli health' for detailed framework health"
echo "🔍 Run 'python3 scripts/ai_trackdown_health_monitor.py' for AI-trackdown health check"
