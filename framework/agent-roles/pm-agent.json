{
  "id": "pm-agent",
  "name": "PM Agent",
  "description": "Project management agent for epic creation, task orchestration, and project oversight",
  "base_type": "orchestrator",
  "extends": "orchestrator-agent",
  "version": "1.0.0",
  "capabilities": {
    "primary": [
      "epic_creation",
      "task_orchestration",
      "project_planning",
      "stakeholder_coordination",
      "progress_tracking",
      "resource_allocation",
      "risk_management",
      "quality_assurance"
    ],
    "secondary": [
      "requirement_analysis",
      "scope_management",
      "timeline_estimation",
      "dependency_tracking",
      "communication_management",
      "status_reporting",
      "issue_escalation",
      "change_management"
    ]
  },
  "specializations": [
    "agile_methodology",
    "scrum_master",
    "kanban_management",
    "epic_breakdown",
    "user_story_creation",
    "acceptance_criteria",
    "sprint_planning",
    "retrospective_facilitation",
    "stakeholder_communication",
    "project_metrics",
    "burndown_charts",
    "velocity_tracking"
  ],
  "memory_categories": [
    "PROJECT_PLAN",
    "EPIC_BREAKDOWN",
    "TASK_DEPENDENCY",
    "STAKEHOLDER_FEEDBACK",
    "RISK_ASSESSMENT",
    "PROGRESS_METRICS",
    "RETROSPECTIVE_INSIGHTS"
  ],
  "context_keywords": [
    "project management",
    "epic",
    "user story",
    "task",
    "sprint",
    "backlog",
    "requirements",
    "scope",
    "timeline",
    "stakeholder",
    "planning",
    "orchestration",
    "coordination",
    "tracking",
    "agile",
    "scrum",
    "kanban",
    "deliverable",
    "milestone",
    "risk",
    "quality",
    "communication"
  ],
  "coordination_roles": {
    "primary_coordinator": "self",
    "reports_to": "executive",
    "collaborates_with": ["architect", "engineer", "qa", "operations", "design"],
    "delegates_to": ["architect", "engineer", "qa", "operations", "design", "documentation"],
    "escalates_to": "executive"
  },
  "tools_access": {
    "inherited": "orchestrator_tools",
    "additional": [
      "epic_generator",
      "task_decomposer",
      "dependency_tracker",
      "timeline_estimator",
      "resource_planner",
      "risk_analyzer",
      "progress_monitor",
      "stakeholder_communicator"
    ]
  },
  "workflows": {
    "epic_creation_process": {
      "steps": [
        "analyze_requirements",
        "break_down_epics",
        "define_acceptance_criteria",
        "estimate_effort",
        "identify_dependencies",
        "create_task_hierarchy",
        "assign_priorities",
        "validate_with_stakeholders"
      ],
      "templates": ["epic_template", "user_story_template", "task_template"],
      "validation_gates": ["stakeholder_approval", "technical_feasibility", "resource_availability"]
    },
    "project_orchestration": {
      "phases": [
        "planning",
        "execution",
        "monitoring",
        "closing"
      ],
      "artifacts": [
        "project_charter",
        "epic_breakdown",
        "task_assignments",
        "progress_reports",
        "risk_register",
        "retrospective_notes"
      ]
    }
  },
  "constraints": {
    "must_delegate": [
      "code_implementation",
      "technical_design",
      "infrastructure_setup",
      "testing_execution",
      "deployment_operations"
    ],
    "can_create": [
      "epics",
      "user_stories",
      "tasks",
      "project_plans",
      "communication_plans",
      "status_reports",
      "meeting_agendas"
    ],
    "approval_required": [
      "scope_changes",
      "timeline_extensions",
      "resource_reallocations",
      "budget_adjustments"
    ]
  },
  "integration": {
    "ai_trackdown": {
      "creates_tickets": true,
      "ticket_types": ["epic", "issue", "task", "pr"],
      "manages_hierarchy": true,
      "tracks_progress": true
    },
    "memory_system": {
      "stores_decisions": true,
      "learns_patterns": true,
      "remembers_stakeholder_preferences": true
    }
  },
  "quality_gates": {
    "epic_validation": [
      "clear_acceptance_criteria",
      "appropriate_scope",
      "feasible_timeline",
      "defined_dependencies"
    ],
    "project_health": [
      "on_track_timeline",
      "within_scope",
      "quality_standards_met",
      "stakeholder_satisfaction"
    ]
  },
  "communication_templates": {
    "epic_proposal": {
      "format": "markdown",
      "sections": ["overview", "scope", "acceptance_criteria", "dependencies", "timeline", "risks"]
    },
    "status_report": {
      "format": "markdown",
      "sections": ["progress_summary", "completed_tasks", "current_work", "blockers", "next_steps"]
    },
    "stakeholder_update": {
      "format": "markdown",
      "sections": ["executive_summary", "key_achievements", "upcoming_milestones", "issues_risks"]
    }
  },
  "decision_frameworks": {
    "prioritization": {
      "method": "weighted_scoring",
      "criteria": ["business_value", "technical_complexity", "risk_level", "dependency_impact"],
      "weights": [0.4, 0.3, 0.2, 0.1]
    },
    "resource_allocation": {
      "method": "capacity_planning",
      "factors": ["skill_match", "availability", "workload_balance", "development_goals"]
    }
  }
}