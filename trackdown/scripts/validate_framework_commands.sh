#!/bin/bash

# Claude PM Framework - Operational Command Validation Script
# Validates all critical operational commands for framework reliability
# Generated by QA Agent for FWK-004 validation

echo "=== Claude PM Framework Command Validation ==="
echo "Date: $(date)"
echo "=============================================="
echo

# Test results tracking
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# Function to run test and track results
run_test() {
    local test_name="$1"
    local command="$2"
    local expected_pattern="$3"
    
    echo "Testing: $test_name"
    echo "Command: $command"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    # Measure execution time
    start_time=$(date +%s.%N)
    
    # Run command and capture output
    if output=$(eval "$command" 2>&1); then
        end_time=$(date +%s.%N)
        execution_time=$(echo "$end_time - $start_time" | bc)
        
        # Check if output matches expected pattern
        if [[ -z "$expected_pattern" ]] || echo "$output" | grep -q "$expected_pattern"; then
            echo "‚úÖ PASS - Execution time: ${execution_time}s"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo "‚ùå FAIL - Pattern not found: $expected_pattern"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        end_time=$(date +%s.%N)
        execution_time=$(echo "$end_time - $start_time" | bc)
        echo "‚ùå FAIL - Command failed (${execution_time}s): $output"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo
}

echo "=== 1. Primary Startup Protocol Commands ==="
echo

run_test "Current Sprint Query" \
    'grep -A20 "üéØ Current Sprint" /Users/masa/Projects/claude-multiagent-pm/trackdown/BACKLOG.md' \
    "Current Sprint"

run_test "Priority Tickets Query" \
    'grep -A50 "üöÄ Priority Implementation Tickets" /Users/masa/Projects/claude-multiagent-pm/trackdown/BACKLOG.md' \
    "Priority Implementation Tickets"

echo "=== 2. File Access Validation ==="
echo

run_test "BACKLOG.md Access" \
    'cat /Users/masa/Projects/claude-multiagent-pm/trackdown/BACKLOG.md | head -20' \
    "Claude Multi-Agent PM Framework"

run_test "Trackdown Directory Listing" \
    'ls /Users/masa/Projects/claude-multiagent-pm/trackdown/' \
    "BACKLOG.md"

run_test "Docs Directory Listing" \
    'ls /Users/masa/Projects/claude-multiagent-pm/docs/' \
    "TICKETING_SYSTEM.md"

echo "=== 3. Status Reports Accessibility ==="
echo

run_test "MEM Status Reports Listing" \
    'ls /Users/masa/Projects/claude-multiagent-pm/trackdown/MEM-*-STATUS.md' \
    "MEM-001-STATUS.md"

run_test "MEM-001 Status Report Content" \
    'cat /Users/masa/Projects/claude-multiagent-pm/trackdown/MEM-001-STATUS.md | head -10' \
    "MEM-001: Core mem0AI Integration Setup"

echo "=== 4. Framework Health Commands ==="
echo

run_test "Memory Service Health Check" \
    'curl -s http://localhost:8002/health' \
    "healthy"

run_test "Framework Documentation Structure" \
    'find /Users/masa/Projects/claude-multiagent-pm/ -name "*.md" | head -10' \
    ".md"

echo "=== 5. Performance Validation ==="
echo

# Test large file operations
run_test "Large File Handling" \
    'wc -l /Users/masa/Projects/claude-multiagent-pm/trackdown/BACKLOG.md' \
    ""

run_test "Search Performance" \
    'grep -r "MEM-001" /Users/masa/Projects/claude-multiagent-pm/trackdown/ | head -5' \
    "MEM-001"

echo "=== VALIDATION SUMMARY ==="
echo "Total Tests: $TOTAL_TESTS"
echo "Passed: $PASSED_TESTS"
echo "Failed: $FAILED_TESTS"
echo "Success Rate: $(( (PASSED_TESTS * 100) / TOTAL_TESTS ))%"
echo

if [ $FAILED_TESTS -eq 0 ]; then
    echo "üéâ ALL TESTS PASSED - Framework is operationally ready!"
    exit 0
else
    echo "‚ö†Ô∏è $FAILED_TESTS tests failed - Framework needs attention"
    exit 1
fi